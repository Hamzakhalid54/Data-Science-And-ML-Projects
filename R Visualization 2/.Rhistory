library(tidyverse)
library(effsize)
install.packages("tidyverse")
install.packages("tidyverse")
# Install effsize
install.packages("effsize")
library(tidyverse)
library(effsize)
# Reading the data
data <- read.csv("hbr_maples.csv")
# Function to calculate Cohen's d
calculate_cohens_d <- function(group1, group2) {
d <- cohen.d(group1, group2, pooled = TRUE)$estimate
return(d)
}
# Calculate effect sizes for Watershed
effect_sizes_watershed <- data %>%
group_by(watershed) %>%
summarise(effect_size = calculate_cohens_d(stem_dry_mass[which(watershed == first(watershed))],
stem_dry_mass[which(watershed != first(watershed))])) %>%
filter(!is.na(effect_size))
# Calculate effect sizes for Elevation
effect_sizes_elevation <- data %>%
group_by(elevation) %>%
summarise(effect_size = calculate_cohens_d(stem_dry_mass[which(elevation == first(elevation))],
stem_dry_mass[which(elevation != first(elevation))])) %>%
filter(!is.na(effect_size))
# Plotting
library(ggplot2)
# Plot for Watershed
ggplot(effect_sizes_watershed, aes(x = watershed, y = effect_size)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Effect Size by Watershed", x = "Watershed", y = "Cohen's d")
# Plot for Elevation
ggplot(effect_sizes_elevation, aes(x = elevation, y = effect_size)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Effect Size by Elevation", x = "Elevation", y = "Cohen's d")
# Assuming you have already read your data into 'data'
library(dplyr)
library(ggplot2)
library(rstatix)
# Test for normality within each group defined by watershed and elevation
normality_results <- data %>%
group_by(watershed, elevation) %>%
shapiro_test(stem_dry_mass)
# View the normality results
print(normality_results)
# Perform Mann-Whitney U test for the Reference watershed between Low and Mid elevations
test_results <- data %>%
filter(watershed == "Reference", elevation %in% c("Low", "Mid")) %>%
wilcox_test(stem_dry_mass ~ elevation)
# Calculate effect size for the Mann-Whitney U test
test_results <- test_results %>%
add_xy_position(x = "elevation") %>%
mutate(effect_size = cohen_d(stem_dry_mass, elevation, data = .))
# View the test results
print(test_results)
# Create a boxplot for the Reference watershed comparing Low and Mid elevations
ggplot(data, aes(x = elevation, y = stem_dry_mass, color = elevation)) +
geom_boxplot() +
facet_wrap(~watershed) +
labs(title = "Stem Dry Mass by Elevation within Watershed",
x = "Elevation",
y = "Stem Dry Mass") +
theme_minimal()
# Note: If you have not installed these packages, you'll need to do so with install.packages()
# Assuming you have already read your data into 'data'
library(dplyr)
library(ggplot2)
library(rstatix)
data <- read.csv("hbr_maples.csv")
# Test for normality within each group defined by watershed and elevation
normality_results <- data %>%
group_by(watershed, elevation) %>%
shapiro_test(stem_dry_mass)
# View the normality results
print(normality_results)
# Perform Mann-Whitney U test for the Reference watershed between Low and Mid elevations
test_results <- data %>%
filter(watershed == "Reference", elevation %in% c("Low", "Mid")) %>%
wilcox_test(stem_dry_mass ~ elevation)
# Calculate effect size for the Mann-Whitney U test
test_results <- test_results %>%
add_xy_position(x = "elevation") %>%
mutate(effect_size = cohen_d(stem_dry_mass, elevation, data = .))
# View the test results
print(test_results)
# Calculate effect size for the Mann-Whitney U test
test_results <- test_results %>%
add_xy_position(x = "elevation") %>%
mutate(effect_size = cohen_d(stem_dry_mass, elevation, data = .))
library(effsize)
data <- read.csv("hbr_maples.csv")
# Test for normality within each group defined by watershed and elevation
normality_results <- data %>%
group_by(watershed, elevation) %>%
shapiro_test(stem_dry_mass)
# View the normality results
print(normality_results)
# Perform Mann-Whitney U test for the Reference watershed between Low and Mid elevations
test_results <- data %>%
filter(watershed == "Reference", elevation %in% c("Low", "Mid")) %>%
wilcox_test(stem_dry_mass ~ elevation)
# Calculate effect size for the Mann-Whitney U test
test_results <- test_results %>%
add_xy_position(x = "elevation") %>%
mutate(effect_size = cohen_d(stem_dry_mass, elevation, data = .))
library(dplyr)
library(ggplot2)
library(rstatix)
library(effsize)
# Read the data
data <- read.csv("hbr_maples.csv")
# Test for normality within each group defined by watershed and elevation
normality_results <- data %>%
group_by(watershed, elevation) %>%
shapiro_test(stem_dry_mass)
# Print the normality results
print(normality_results)
# Function to calculate effect size for Mann-Whitney U test (Rank-biserial correlation)
calculate_effect_size <- function(x, y) {
test <- wilcox.test(x, y)
n1 <- length(x)
n2 <- length(y)
effect_size <- (test$statistic - (n1 * (n1 + 1) / 2)) / (n1 * n2)
return(effect_size)
}
# Perform Mann-Whitney U test for the Reference watershed between Low and Mid elevations
comparison <- data %>%
filter(watershed == "Reference", elevation %in% c("Low", "Mid"))
mann_whitney <- wilcox.test(stem_dry_mass ~ elevation, data = comparison, exact = FALSE)
# Calculate effect size for Mann-Whitney U test
effect_size <- calculate_effect_size(
comparison$stem_dry_mass[comparison$elevation == "Low"],
comparison$stem_dry_mass[comparison$elevation == "Mid"]
)
# Print the test results and effect size
print(mann_whitney)
print(effect_size)
# Create a boxplot for the Reference watershed comparing Low and Mid elevations
ggplot(comparison, aes(x = elevation, y = stem_dry_mass, color = elevation)) +
geom_boxplot() +
labs(title = "Stem Dry Mass by Elevation within Reference Watershed",
x = "Elevation",
y = "Stem Dry Mass") +
theme_minimal()
library(dplyr)
library(ggplot2)
library(rstatix)
library(effsize)
# Read the data
data <- read.csv("hbr_maples.csv")
# Test for normality within each group defined by watershed and elevation
normality_results <- data %>%
group_by(watershed, elevation) %>%
shapiro_test(stem_dry_mass)
# Print the normality results
print(normality_results)
# Function to calculate effect size for Mann-Whitney U test (Rank-biserial correlation)
calculate_effect_size <- function(x, y) {
test <- wilcox.test(x, y)
n1 <- length(x)
n2 <- length(y)
effect_size <- (test$statistic - (n1 * (n1 + 1) / 2)) / (n1 * n2)
return(effect_size)
}
# Perform Mann-Whitney U test for the Reference watershed between Low and Mid elevations
comparison <- data %>%
filter(watershed == "Reference", elevation %in% c("Low", "Mid"))
mann_whitney <- wilcox.test(stem_dry_mass ~ elevation, data = comparison, exact = FALSE)
# Calculate effect size for Mann-Whitney U test
effect_size <- calculate_effect_size(
comparison$stem_dry_mass[comparison$elevation == "Low"],
comparison$stem_dry_mass[comparison$elevation == "Mid"]
)
# Print the test results and effect size
print(mann_whitney)
print(effect_size)
# Create a boxplot for the Reference watershed comparing Low and Mid elevations
ggplot(comparison, aes(x = elevation, y = stem_dry_mass, color = elevation)) +
geom_boxplot() +
labs(title = "Stem Dry Mass by Elevation within Reference Watershed",
x = "Elevation",
y = "Stem Dry Mass") +
theme_minimal()
# Display the plot
ggsave("stem_dry_mass_comparison.png", width = 10, height = 6, dpi = 300)
library(dplyr)
library(ggplot2)
library(rstatix)
library(effsize)
# Read the data
data <- read.csv("hbr_maples.csv")
# Test for normality within each group defined by watershed and elevation
normality_results <- data %>%
group_by(watershed, elevation) %>%
shapiro_test(stem_dry_mass)
# Print the normality results
print(normality_results)
# Function to calculate effect size for Mann-Whitney U test (Rank-biserial correlation)
calculate_effect_size <- function(x, y) {
test <- wilcox.test(x, y)
n1 <- length(x)
n2 <- length(y)
effect_size <- (test$statistic - (n1 * (n1 + 1) / 2)) / (n1 * n2)
return(effect_size)
}
# Perform Mann-Whitney U test for the Reference watershed between Low and Mid elevations
comparison <- data %>%
filter(watershed == "Reference", elevation %in% c("Low", "Mid"))
mann_whitney <- wilcox.test(stem_dry_mass ~ elevation, data = comparison, exact = FALSE)
# Calculate effect size for Mann-Whitney U test
effect_size <- calculate_effect_size(
comparison$stem_dry_mass[comparison$elevation == "Low"],
comparison$stem_dry_mass[comparison$elevation == "Mid"]
)
# Print the test results and effect size
print(mann_whitney)
print(effect_size)
# Create a boxplot for the Reference watershed comparing Low and Mid elevations
ggplot(comparison, aes(x = elevation, y = stem_dry_mass, color = elevation)) +
geom_boxplot() +
labs(title = "Stem Dry Mass by Elevation within Reference Watershed",
x = "Elevation",
y = "Stem Dry Mass") +
theme_minimal()
library(dplyr)
library(ggplot2)
library(rstatix)
library(effsize)
# Read the data
data <- read.csv("hbr_maples.csv")
# Test for normality within each group defined by watershed and elevation
normality_results <- data %>%
group_by(watershed, elevation) %>%
shapiro_test(stem_dry_mass)
# Print the normality results
print(normality_results)
# Function to calculate effect size for Mann-Whitney U test (Rank-biserial correlation)
calculate_effect_size <- function(x, y) {
test <- wilcox.test(x, y)
n1 <- length(x)
n2 <- length(y)
effect_size <- (test$statistic - (n1 * (n1 + 1) / 2)) / (n1 * n2)
return(effect_size)
}
# Perform Mann-Whitney U test for the Reference watershed between Low and Mid elevations
comparison <- data %>%
filter(watershed == "Reference", elevation %in% c("Low", "Mid"))
mann_whitney <- wilcox.test(stem_dry_mass ~ elevation, data = comparison, exact = FALSE)
# Calculate effect size for Mann-Whitney U test
effect_size <- calculate_effect_size(
comparison$stem_dry_mass[comparison$elevation == "Low"],
comparison$stem_dry_mass[comparison$elevation == "Mid"]
)
# Print the test results and effect size
print(mann_whitney)
print(effect_size)
# Create a boxplot for the Reference watershed comparing Low and Mid elevations
ggplot(comparison, aes(x = elevation, y = stem_dry_mass, color = elevation)) +
geom_boxplot() +
labs(title = "Stem Dry Mass by Elevation within Reference Watershed",
x = "Elevation",
y = "Stem Dry Mass") +
theme_minimal()
# Display the plot
ggsave("stem_dry_mass_comparison.png", width = 10, height = 6, dpi = 300)
